# `.lit` Settings

This file is special in that it is parsed and any `!plugins` it contains are pre-populated for all other `.lit` documents in this `.lit` notebook.

```>md !info
ℹ️ Move, copy or *transclude* any document specific `!plugin` here to have it apply to all documents.
```

## Table of Contents

## Settings 

Not yet Implemented the below are mocks while we decide on the interface. Just another kind of `!plugin`? data exports could work the same...

### GitHub 

Set up a GitHub repository to save your updates to. *Requires a **GitHub Access Token***.

```js #connect #github !collapse > md
const settings = {
    username: "dotlitdev",
    repository: "dotlit-starter",
    branch: "main",
    prefix: "",
};

return (async (fn) => {
  if (typeof localStorage === "undefined") return "No localStorage available.";

  const __key = "ghSettings";
  const display = fn => {
      const redacted = Object.assign({token:'••••••••••'}, settings, {})
      return ("`"+lit.utils.inspect(redacted)+"`")
             .split('\n')
             .map(l=>'> '+l)
             .join('\n')
  }

  const current = localStorage.getItem(__key);

  if (current) {
    let data = JSON.parse(current);
    if (data && data.token) return "Already set up.\n\n" + display();
  }

  const token = prompt(
    `Enter a GitHub Access Token for:\n Repository: ${settings.username}/${settings.repository}`
  );

  if (token) {
    localStorage.setItem(__key, JSON.stringify({ ...settings, token }));
    return "All set up.\n\n" + display();
  }

  return "No **token** provided. Not set up.\n\n" + display();
})();

```

## Custom plugins

Add your own custom plugins here to have them enabled for all documents in this `.lit` notebook.
